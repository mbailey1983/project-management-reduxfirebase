{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","classclass","Notifications","notes","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","notifications","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","class","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","NavBar","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","require","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.98502b11.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/create'>New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin' onClick={props.signOut}>Logout</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/' className=\"btn btn-floating purple lighten-2\">{props.profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      signOut: () => dispatch(signOut())\r\n      \r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n      const firebase = getFirebase();\r\n\r\n      firebase.auth().signInWithEmailAndPassword(\r\n          credentials.email,\r\n          credentials.password\r\n      ).then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'LOGIN_ERR', err});\r\n      });\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    }\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then((resp) => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' })\r\n    }).catch( (err) => {\r\n      dispatch({ type: 'SIGNUP_ERR', err })\r\n    }\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li>\r\n                <NavLink to='/signup'>Signup</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin'>Login</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    // console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-4\">\r\n            <div classclass=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Work Your Plan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notes } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                        </span>\r\n                        <ul className=\"notifications\">\r\n                            {\r\n                                notes && notes.map(\r\n                                    item => {\r\n                                      return (\r\n                                          <li key={item.id}>\r\n                                            <span className=\"purple-text\">{item.user}&emsp; </span>\r\n                                            <span>{item.content}</span>\r\n                                            <div className=\"grey-text note-date\">\r\n                                                <p className=\"grey-text text-lighten-1\">{moment(item.time.toDate()).fromNow()}</p>\r\n                                            </div>\r\n                                          </li>\r\n                                      )\r\n                                    }\r\n                                    \r\n                                )\r\n                            }\r\n                        </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                    <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notes } = this.props;\r\n        if (!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notes={notes}/>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      projects: state.firestore.ordered.projects,\r\n      auth: state.firebase.auth,\r\n      notes: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">{ project.title }</span>\r\n                <p>{ project.content }</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>Posted by { project.authorFirstName} { project.authorLastName }</div>\r\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }    else {\r\n  return (\r\n    <div className=\"container center\">\r\n        <i class=\"fas fa-cog fa-7x fa-spin\"></i>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.signIn(this.state);\r\n    }\r\n    \r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                \r\n            </div>\r\n            <div className=\"input-field\">\r\n            <button className=\"btn purple lighten-2\">Login</button>\r\n            <div className=\"red-text center\">\r\n                { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.signUp(this.state)\r\n    }\r\n    \r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                \r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n\r\n            </div>\r\n            \r\n            <div className=\"input-field\">\r\n            <button className=\"btn purple lighten-2\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{ authError }</p> : null}\r\n            </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.createProject(this.state)\r\n      this.props.history.push('/')\r\n    }\r\n    \r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor=\"content\">Description</label>\r\n                <textarea id=\"content\" onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                \r\n            </div>\r\n            <div className=\"input-field\">\r\n            <button className=\"btn purple lighten-2\">Create Project</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then( () => {\r\n      dispatch({ type: 'CREATE_PROJ', project });\r\n    }).catch((err) => {\r\n    dispatch({ type: 'CREATE_PROJ_ERROR', err });\r\n    })\r\n  };\r\n  \r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/NavBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'LOGIN_ERR':\r\n      console.log('login error');\r\n      return {\r\n        ...state, \r\n        authError: 'Login failed'\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout successful');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup successful');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n    return state\r\n}\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJ':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJ_ERROR': \r\n      console.log('create project error', action.err)\r\n      return state;\r\n    default:\r\n      return state;\r\n}\r\n}\r\n\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","  import firebase from 'firebase/app'\r\n  import 'firebase/firestore'\r\n  import 'firebase/auth'\r\n  \r\n  // Initialize Firebase\r\n  let config = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    databaseURL: process.env.REACT_APP_DBURL,\r\n    projectId: process.env.REACT_APP_PROJID,\r\n    storageBucket: process.env.REACT_APP_STORBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MSGSENDERID\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export default firebase;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\nimport dotenv from 'dotenv';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst store = createStore(rootReducer, \r\n    compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\r\n    reduxFirestore(fbConfig)\r\n    )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>, \r\n    document.getElementById('root'));\r\n    serviceWorker.register();\r\n}\r\n)\r\n"],"sourceRoot":""}